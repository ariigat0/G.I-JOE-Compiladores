Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COLON
    LBRACKET
    RBRACKET

Grammar

Rule 0     S' -> assignment
Rule 1     assignment -> VARIABLE EQUAL expression
Rule 2     assignment -> VARIABLE EQUAL flow
Rule 3     flow -> VARIABLE CONNECT flow_functions
Rule 4     flow_functions -> flow_function_call CONNECT flow_functions
Rule 5     flow_functions -> flow_function_call
Rule 6     flow_function_call -> VARIABLE LPAREN params RPAREN
Rule 7     flow -> NUMBER CONNECT aggregation_functions
Rule 8     aggregation_functions -> aggregation_function_call CONNECT aggregation_functions
Rule 9     aggregation_functions -> aggregation_function_call
Rule 10    aggregation_function_call -> NUMBER LPAREN params RPAREN
Rule 11    assignment -> expression
Rule 12    expression -> term
Rule 13    expression -> string_def
Rule 14    string_def -> STRING
Rule 15    expression -> expression PLUS term
Rule 16    expression -> expression MINUS term
Rule 17    term -> exponent
Rule 18    term -> term TIMES exponent
Rule 19    term -> term DIV exponent
Rule 20    exponent -> factor
Rule 21    exponent -> factor EXP factor
Rule 22    factor -> NUMBER
Rule 23    factor -> VARIABLE
Rule 24    factor -> LPAREN expression RPAREN
Rule 25    factor -> function_call
Rule 26    function_call -> VARIABLE LPAREN RPAREN
Rule 27    function_call -> VARIABLE LPAREN params RPAREN
Rule 28    params -> params COMMA expression
Rule 29    params -> expression

Terminals, with rules where they appear

COLON                : 
COMMA                : 28
CONNECT              : 3 4 7 8
DIV                  : 19
EQUAL                : 1 2
EXP                  : 21
LBRACKET             : 
LPAREN               : 6 10 24 26 27
MINUS                : 16
NUMBER               : 7 10 22
PLUS                 : 15
RBRACKET             : 
RPAREN               : 6 10 24 26 27
STRING               : 14
TIMES                : 18
VARIABLE             : 1 2 3 6 23 26 27
error                : 

Nonterminals, with rules where they appear

aggregation_function_call : 8 9
aggregation_functions : 7 8
assignment           : 0
exponent             : 17 18 19
expression           : 1 11 15 16 24 28 29
factor               : 20 21 21
flow                 : 2
flow_function_call   : 4 5
flow_functions       : 3 4
function_call        : 25
params               : 6 10 27 28
string_def           : 13
term                 : 12 15 16 18 19

Parsing method: LALR

state 0

    (0) S' -> . assignment
    (1) assignment -> . VARIABLE EQUAL expression
    (2) assignment -> . VARIABLE EQUAL flow
    (11) assignment -> . expression
    (12) expression -> . term
    (13) expression -> . string_def
    (15) expression -> . expression PLUS term
    (16) expression -> . expression MINUS term
    (17) term -> . exponent
    (18) term -> . term TIMES exponent
    (19) term -> . term DIV exponent
    (14) string_def -> . STRING
    (20) exponent -> . factor
    (21) exponent -> . factor EXP factor
    (22) factor -> . NUMBER
    (23) factor -> . VARIABLE
    (24) factor -> . LPAREN expression RPAREN
    (25) factor -> . function_call
    (26) function_call -> . VARIABLE LPAREN RPAREN
    (27) function_call -> . VARIABLE LPAREN params RPAREN

    VARIABLE        shift and go to state 2
    STRING          shift and go to state 7
    NUMBER          shift and go to state 9
    LPAREN          shift and go to state 10

    assignment                     shift and go to state 1
    expression                     shift and go to state 3
    term                           shift and go to state 4
    string_def                     shift and go to state 5
    exponent                       shift and go to state 6
    factor                         shift and go to state 8
    function_call                  shift and go to state 11

state 1

    (0) S' -> assignment .



state 2

    (1) assignment -> VARIABLE . EQUAL expression
    (2) assignment -> VARIABLE . EQUAL flow
    (23) factor -> VARIABLE .
    (26) function_call -> VARIABLE . LPAREN RPAREN
    (27) function_call -> VARIABLE . LPAREN params RPAREN

    EQUAL           shift and go to state 12
    EXP             reduce using rule 23 (factor -> VARIABLE .)
    TIMES           reduce using rule 23 (factor -> VARIABLE .)
    DIV             reduce using rule 23 (factor -> VARIABLE .)
    PLUS            reduce using rule 23 (factor -> VARIABLE .)
    MINUS           reduce using rule 23 (factor -> VARIABLE .)
    $end            reduce using rule 23 (factor -> VARIABLE .)
    LPAREN          shift and go to state 13


state 3

    (11) assignment -> expression .
    (15) expression -> expression . PLUS term
    (16) expression -> expression . MINUS term

    $end            reduce using rule 11 (assignment -> expression .)
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15


state 4

    (12) expression -> term .
    (18) term -> term . TIMES exponent
    (19) term -> term . DIV exponent

    PLUS            reduce using rule 12 (expression -> term .)
    MINUS           reduce using rule 12 (expression -> term .)
    $end            reduce using rule 12 (expression -> term .)
    RPAREN          reduce using rule 12 (expression -> term .)
    COMMA           reduce using rule 12 (expression -> term .)
    TIMES           shift and go to state 16
    DIV             shift and go to state 17


state 5

    (13) expression -> string_def .

    PLUS            reduce using rule 13 (expression -> string_def .)
    MINUS           reduce using rule 13 (expression -> string_def .)
    $end            reduce using rule 13 (expression -> string_def .)
    RPAREN          reduce using rule 13 (expression -> string_def .)
    COMMA           reduce using rule 13 (expression -> string_def .)


state 6

    (17) term -> exponent .

    TIMES           reduce using rule 17 (term -> exponent .)
    DIV             reduce using rule 17 (term -> exponent .)
    PLUS            reduce using rule 17 (term -> exponent .)
    MINUS           reduce using rule 17 (term -> exponent .)
    $end            reduce using rule 17 (term -> exponent .)
    RPAREN          reduce using rule 17 (term -> exponent .)
    COMMA           reduce using rule 17 (term -> exponent .)


state 7

    (14) string_def -> STRING .

    PLUS            reduce using rule 14 (string_def -> STRING .)
    MINUS           reduce using rule 14 (string_def -> STRING .)
    $end            reduce using rule 14 (string_def -> STRING .)
    RPAREN          reduce using rule 14 (string_def -> STRING .)
    COMMA           reduce using rule 14 (string_def -> STRING .)


state 8

    (20) exponent -> factor .
    (21) exponent -> factor . EXP factor

    TIMES           reduce using rule 20 (exponent -> factor .)
    DIV             reduce using rule 20 (exponent -> factor .)
    PLUS            reduce using rule 20 (exponent -> factor .)
    MINUS           reduce using rule 20 (exponent -> factor .)
    $end            reduce using rule 20 (exponent -> factor .)
    RPAREN          reduce using rule 20 (exponent -> factor .)
    COMMA           reduce using rule 20 (exponent -> factor .)
    EXP             shift and go to state 18


state 9

    (22) factor -> NUMBER .

    EXP             reduce using rule 22 (factor -> NUMBER .)
    TIMES           reduce using rule 22 (factor -> NUMBER .)
    DIV             reduce using rule 22 (factor -> NUMBER .)
    PLUS            reduce using rule 22 (factor -> NUMBER .)
    MINUS           reduce using rule 22 (factor -> NUMBER .)
    $end            reduce using rule 22 (factor -> NUMBER .)
    RPAREN          reduce using rule 22 (factor -> NUMBER .)
    COMMA           reduce using rule 22 (factor -> NUMBER .)


state 10

    (24) factor -> LPAREN . expression RPAREN
    (12) expression -> . term
    (13) expression -> . string_def
    (15) expression -> . expression PLUS term
    (16) expression -> . expression MINUS term
    (17) term -> . exponent
    (18) term -> . term TIMES exponent
    (19) term -> . term DIV exponent
    (14) string_def -> . STRING
    (20) exponent -> . factor
    (21) exponent -> . factor EXP factor
    (22) factor -> . NUMBER
    (23) factor -> . VARIABLE
    (24) factor -> . LPAREN expression RPAREN
    (25) factor -> . function_call
    (26) function_call -> . VARIABLE LPAREN RPAREN
    (27) function_call -> . VARIABLE LPAREN params RPAREN

    STRING          shift and go to state 7
    NUMBER          shift and go to state 9
    VARIABLE        shift and go to state 20
    LPAREN          shift and go to state 10

    expression                     shift and go to state 19
    term                           shift and go to state 4
    string_def                     shift and go to state 5
    exponent                       shift and go to state 6
    factor                         shift and go to state 8
    function_call                  shift and go to state 11

state 11

    (25) factor -> function_call .

    EXP             reduce using rule 25 (factor -> function_call .)
    TIMES           reduce using rule 25 (factor -> function_call .)
    DIV             reduce using rule 25 (factor -> function_call .)
    PLUS            reduce using rule 25 (factor -> function_call .)
    MINUS           reduce using rule 25 (factor -> function_call .)
    $end            reduce using rule 25 (factor -> function_call .)
    RPAREN          reduce using rule 25 (factor -> function_call .)
    COMMA           reduce using rule 25 (factor -> function_call .)


state 12

    (1) assignment -> VARIABLE EQUAL . expression
    (2) assignment -> VARIABLE EQUAL . flow
    (12) expression -> . term
    (13) expression -> . string_def
    (15) expression -> . expression PLUS term
    (16) expression -> . expression MINUS term
    (3) flow -> . VARIABLE CONNECT flow_functions
    (7) flow -> . NUMBER CONNECT aggregation_functions
    (17) term -> . exponent
    (18) term -> . term TIMES exponent
    (19) term -> . term DIV exponent
    (14) string_def -> . STRING
    (20) exponent -> . factor
    (21) exponent -> . factor EXP factor
    (22) factor -> . NUMBER
    (23) factor -> . VARIABLE
    (24) factor -> . LPAREN expression RPAREN
    (25) factor -> . function_call
    (26) function_call -> . VARIABLE LPAREN RPAREN
    (27) function_call -> . VARIABLE LPAREN params RPAREN

    VARIABLE        shift and go to state 21
    NUMBER          shift and go to state 24
    STRING          shift and go to state 7
    LPAREN          shift and go to state 10

    expression                     shift and go to state 22
    flow                           shift and go to state 23
    term                           shift and go to state 4
    string_def                     shift and go to state 5
    exponent                       shift and go to state 6
    factor                         shift and go to state 8
    function_call                  shift and go to state 11

state 13

    (26) function_call -> VARIABLE LPAREN . RPAREN
    (27) function_call -> VARIABLE LPAREN . params RPAREN
    (28) params -> . params COMMA expression
    (29) params -> . expression
    (12) expression -> . term
    (13) expression -> . string_def
    (15) expression -> . expression PLUS term
    (16) expression -> . expression MINUS term
    (17) term -> . exponent
    (18) term -> . term TIMES exponent
    (19) term -> . term DIV exponent
    (14) string_def -> . STRING
    (20) exponent -> . factor
    (21) exponent -> . factor EXP factor
    (22) factor -> . NUMBER
    (23) factor -> . VARIABLE
    (24) factor -> . LPAREN expression RPAREN
    (25) factor -> . function_call
    (26) function_call -> . VARIABLE LPAREN RPAREN
    (27) function_call -> . VARIABLE LPAREN params RPAREN

    RPAREN          shift and go to state 25
    STRING          shift and go to state 7
    NUMBER          shift and go to state 9
    VARIABLE        shift and go to state 20
    LPAREN          shift and go to state 10

    params                         shift and go to state 26
    expression                     shift and go to state 27
    term                           shift and go to state 4
    string_def                     shift and go to state 5
    exponent                       shift and go to state 6
    factor                         shift and go to state 8
    function_call                  shift and go to state 11

state 14

    (15) expression -> expression PLUS . term
    (17) term -> . exponent
    (18) term -> . term TIMES exponent
    (19) term -> . term DIV exponent
    (20) exponent -> . factor
    (21) exponent -> . factor EXP factor
    (22) factor -> . NUMBER
    (23) factor -> . VARIABLE
    (24) factor -> . LPAREN expression RPAREN
    (25) factor -> . function_call
    (26) function_call -> . VARIABLE LPAREN RPAREN
    (27) function_call -> . VARIABLE LPAREN params RPAREN

    NUMBER          shift and go to state 9
    VARIABLE        shift and go to state 20
    LPAREN          shift and go to state 10

    term                           shift and go to state 28
    exponent                       shift and go to state 6
    factor                         shift and go to state 8
    function_call                  shift and go to state 11

state 15

    (16) expression -> expression MINUS . term
    (17) term -> . exponent
    (18) term -> . term TIMES exponent
    (19) term -> . term DIV exponent
    (20) exponent -> . factor
    (21) exponent -> . factor EXP factor
    (22) factor -> . NUMBER
    (23) factor -> . VARIABLE
    (24) factor -> . LPAREN expression RPAREN
    (25) factor -> . function_call
    (26) function_call -> . VARIABLE LPAREN RPAREN
    (27) function_call -> . VARIABLE LPAREN params RPAREN

    NUMBER          shift and go to state 9
    VARIABLE        shift and go to state 20
    LPAREN          shift and go to state 10

    term                           shift and go to state 29
    exponent                       shift and go to state 6
    factor                         shift and go to state 8
    function_call                  shift and go to state 11

state 16

    (18) term -> term TIMES . exponent
    (20) exponent -> . factor
    (21) exponent -> . factor EXP factor
    (22) factor -> . NUMBER
    (23) factor -> . VARIABLE
    (24) factor -> . LPAREN expression RPAREN
    (25) factor -> . function_call
    (26) function_call -> . VARIABLE LPAREN RPAREN
    (27) function_call -> . VARIABLE LPAREN params RPAREN

    NUMBER          shift and go to state 9
    VARIABLE        shift and go to state 20
    LPAREN          shift and go to state 10

    exponent                       shift and go to state 30
    factor                         shift and go to state 8
    function_call                  shift and go to state 11

state 17

    (19) term -> term DIV . exponent
    (20) exponent -> . factor
    (21) exponent -> . factor EXP factor
    (22) factor -> . NUMBER
    (23) factor -> . VARIABLE
    (24) factor -> . LPAREN expression RPAREN
    (25) factor -> . function_call
    (26) function_call -> . VARIABLE LPAREN RPAREN
    (27) function_call -> . VARIABLE LPAREN params RPAREN

    NUMBER          shift and go to state 9
    VARIABLE        shift and go to state 20
    LPAREN          shift and go to state 10

    exponent                       shift and go to state 31
    factor                         shift and go to state 8
    function_call                  shift and go to state 11

state 18

    (21) exponent -> factor EXP . factor
    (22) factor -> . NUMBER
    (23) factor -> . VARIABLE
    (24) factor -> . LPAREN expression RPAREN
    (25) factor -> . function_call
    (26) function_call -> . VARIABLE LPAREN RPAREN
    (27) function_call -> . VARIABLE LPAREN params RPAREN

    NUMBER          shift and go to state 9
    VARIABLE        shift and go to state 20
    LPAREN          shift and go to state 10

    factor                         shift and go to state 32
    function_call                  shift and go to state 11

state 19

    (24) factor -> LPAREN expression . RPAREN
    (15) expression -> expression . PLUS term
    (16) expression -> expression . MINUS term

    RPAREN          shift and go to state 33
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15


state 20

    (23) factor -> VARIABLE .
    (26) function_call -> VARIABLE . LPAREN RPAREN
    (27) function_call -> VARIABLE . LPAREN params RPAREN

    EXP             reduce using rule 23 (factor -> VARIABLE .)
    TIMES           reduce using rule 23 (factor -> VARIABLE .)
    DIV             reduce using rule 23 (factor -> VARIABLE .)
    RPAREN          reduce using rule 23 (factor -> VARIABLE .)
    PLUS            reduce using rule 23 (factor -> VARIABLE .)
    MINUS           reduce using rule 23 (factor -> VARIABLE .)
    COMMA           reduce using rule 23 (factor -> VARIABLE .)
    $end            reduce using rule 23 (factor -> VARIABLE .)
    LPAREN          shift and go to state 13


state 21

    (3) flow -> VARIABLE . CONNECT flow_functions
    (23) factor -> VARIABLE .
    (26) function_call -> VARIABLE . LPAREN RPAREN
    (27) function_call -> VARIABLE . LPAREN params RPAREN

    CONNECT         shift and go to state 34
    EXP             reduce using rule 23 (factor -> VARIABLE .)
    TIMES           reduce using rule 23 (factor -> VARIABLE .)
    DIV             reduce using rule 23 (factor -> VARIABLE .)
    PLUS            reduce using rule 23 (factor -> VARIABLE .)
    MINUS           reduce using rule 23 (factor -> VARIABLE .)
    $end            reduce using rule 23 (factor -> VARIABLE .)
    LPAREN          shift and go to state 13


state 22

    (1) assignment -> VARIABLE EQUAL expression .
    (15) expression -> expression . PLUS term
    (16) expression -> expression . MINUS term

    $end            reduce using rule 1 (assignment -> VARIABLE EQUAL expression .)
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15


state 23

    (2) assignment -> VARIABLE EQUAL flow .

    $end            reduce using rule 2 (assignment -> VARIABLE EQUAL flow .)


state 24

    (7) flow -> NUMBER . CONNECT aggregation_functions
    (22) factor -> NUMBER .

    CONNECT         shift and go to state 35
    EXP             reduce using rule 22 (factor -> NUMBER .)
    TIMES           reduce using rule 22 (factor -> NUMBER .)
    DIV             reduce using rule 22 (factor -> NUMBER .)
    PLUS            reduce using rule 22 (factor -> NUMBER .)
    MINUS           reduce using rule 22 (factor -> NUMBER .)
    $end            reduce using rule 22 (factor -> NUMBER .)


state 25

    (26) function_call -> VARIABLE LPAREN RPAREN .

    EXP             reduce using rule 26 (function_call -> VARIABLE LPAREN RPAREN .)
    TIMES           reduce using rule 26 (function_call -> VARIABLE LPAREN RPAREN .)
    DIV             reduce using rule 26 (function_call -> VARIABLE LPAREN RPAREN .)
    PLUS            reduce using rule 26 (function_call -> VARIABLE LPAREN RPAREN .)
    MINUS           reduce using rule 26 (function_call -> VARIABLE LPAREN RPAREN .)
    $end            reduce using rule 26 (function_call -> VARIABLE LPAREN RPAREN .)
    RPAREN          reduce using rule 26 (function_call -> VARIABLE LPAREN RPAREN .)
    COMMA           reduce using rule 26 (function_call -> VARIABLE LPAREN RPAREN .)


state 26

    (27) function_call -> VARIABLE LPAREN params . RPAREN
    (28) params -> params . COMMA expression

    RPAREN          shift and go to state 36
    COMMA           shift and go to state 37


state 27

    (29) params -> expression .
    (15) expression -> expression . PLUS term
    (16) expression -> expression . MINUS term

    RPAREN          reduce using rule 29 (params -> expression .)
    COMMA           reduce using rule 29 (params -> expression .)
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15


state 28

    (15) expression -> expression PLUS term .
    (18) term -> term . TIMES exponent
    (19) term -> term . DIV exponent

    PLUS            reduce using rule 15 (expression -> expression PLUS term .)
    MINUS           reduce using rule 15 (expression -> expression PLUS term .)
    $end            reduce using rule 15 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 15 (expression -> expression PLUS term .)
    COMMA           reduce using rule 15 (expression -> expression PLUS term .)
    TIMES           shift and go to state 16
    DIV             shift and go to state 17


state 29

    (16) expression -> expression MINUS term .
    (18) term -> term . TIMES exponent
    (19) term -> term . DIV exponent

    PLUS            reduce using rule 16 (expression -> expression MINUS term .)
    MINUS           reduce using rule 16 (expression -> expression MINUS term .)
    $end            reduce using rule 16 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 16 (expression -> expression MINUS term .)
    COMMA           reduce using rule 16 (expression -> expression MINUS term .)
    TIMES           shift and go to state 16
    DIV             shift and go to state 17


state 30

    (18) term -> term TIMES exponent .

    TIMES           reduce using rule 18 (term -> term TIMES exponent .)
    DIV             reduce using rule 18 (term -> term TIMES exponent .)
    PLUS            reduce using rule 18 (term -> term TIMES exponent .)
    MINUS           reduce using rule 18 (term -> term TIMES exponent .)
    $end            reduce using rule 18 (term -> term TIMES exponent .)
    RPAREN          reduce using rule 18 (term -> term TIMES exponent .)
    COMMA           reduce using rule 18 (term -> term TIMES exponent .)


state 31

    (19) term -> term DIV exponent .

    TIMES           reduce using rule 19 (term -> term DIV exponent .)
    DIV             reduce using rule 19 (term -> term DIV exponent .)
    PLUS            reduce using rule 19 (term -> term DIV exponent .)
    MINUS           reduce using rule 19 (term -> term DIV exponent .)
    $end            reduce using rule 19 (term -> term DIV exponent .)
    RPAREN          reduce using rule 19 (term -> term DIV exponent .)
    COMMA           reduce using rule 19 (term -> term DIV exponent .)


state 32

    (21) exponent -> factor EXP factor .

    TIMES           reduce using rule 21 (exponent -> factor EXP factor .)
    DIV             reduce using rule 21 (exponent -> factor EXP factor .)
    PLUS            reduce using rule 21 (exponent -> factor EXP factor .)
    MINUS           reduce using rule 21 (exponent -> factor EXP factor .)
    $end            reduce using rule 21 (exponent -> factor EXP factor .)
    RPAREN          reduce using rule 21 (exponent -> factor EXP factor .)
    COMMA           reduce using rule 21 (exponent -> factor EXP factor .)


state 33

    (24) factor -> LPAREN expression RPAREN .

    EXP             reduce using rule 24 (factor -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 24 (factor -> LPAREN expression RPAREN .)
    DIV             reduce using rule 24 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 24 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 24 (factor -> LPAREN expression RPAREN .)
    $end            reduce using rule 24 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 24 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 24 (factor -> LPAREN expression RPAREN .)


state 34

    (3) flow -> VARIABLE CONNECT . flow_functions
    (4) flow_functions -> . flow_function_call CONNECT flow_functions
    (5) flow_functions -> . flow_function_call
    (6) flow_function_call -> . VARIABLE LPAREN params RPAREN

    VARIABLE        shift and go to state 38

    flow_functions                 shift and go to state 39
    flow_function_call             shift and go to state 40

state 35

    (7) flow -> NUMBER CONNECT . aggregation_functions
    (8) aggregation_functions -> . aggregation_function_call CONNECT aggregation_functions
    (9) aggregation_functions -> . aggregation_function_call
    (10) aggregation_function_call -> . NUMBER LPAREN params RPAREN

    NUMBER          shift and go to state 41

    aggregation_functions          shift and go to state 42
    aggregation_function_call      shift and go to state 43

state 36

    (27) function_call -> VARIABLE LPAREN params RPAREN .

    EXP             reduce using rule 27 (function_call -> VARIABLE LPAREN params RPAREN .)
    TIMES           reduce using rule 27 (function_call -> VARIABLE LPAREN params RPAREN .)
    DIV             reduce using rule 27 (function_call -> VARIABLE LPAREN params RPAREN .)
    PLUS            reduce using rule 27 (function_call -> VARIABLE LPAREN params RPAREN .)
    MINUS           reduce using rule 27 (function_call -> VARIABLE LPAREN params RPAREN .)
    $end            reduce using rule 27 (function_call -> VARIABLE LPAREN params RPAREN .)
    RPAREN          reduce using rule 27 (function_call -> VARIABLE LPAREN params RPAREN .)
    COMMA           reduce using rule 27 (function_call -> VARIABLE LPAREN params RPAREN .)


state 37

    (28) params -> params COMMA . expression
    (12) expression -> . term
    (13) expression -> . string_def
    (15) expression -> . expression PLUS term
    (16) expression -> . expression MINUS term
    (17) term -> . exponent
    (18) term -> . term TIMES exponent
    (19) term -> . term DIV exponent
    (14) string_def -> . STRING
    (20) exponent -> . factor
    (21) exponent -> . factor EXP factor
    (22) factor -> . NUMBER
    (23) factor -> . VARIABLE
    (24) factor -> . LPAREN expression RPAREN
    (25) factor -> . function_call
    (26) function_call -> . VARIABLE LPAREN RPAREN
    (27) function_call -> . VARIABLE LPAREN params RPAREN

    STRING          shift and go to state 7
    NUMBER          shift and go to state 9
    VARIABLE        shift and go to state 20
    LPAREN          shift and go to state 10

    expression                     shift and go to state 44
    term                           shift and go to state 4
    string_def                     shift and go to state 5
    exponent                       shift and go to state 6
    factor                         shift and go to state 8
    function_call                  shift and go to state 11

state 38

    (6) flow_function_call -> VARIABLE . LPAREN params RPAREN

    LPAREN          shift and go to state 45


state 39

    (3) flow -> VARIABLE CONNECT flow_functions .

    $end            reduce using rule 3 (flow -> VARIABLE CONNECT flow_functions .)


state 40

    (4) flow_functions -> flow_function_call . CONNECT flow_functions
    (5) flow_functions -> flow_function_call .

    CONNECT         shift and go to state 46
    $end            reduce using rule 5 (flow_functions -> flow_function_call .)


state 41

    (10) aggregation_function_call -> NUMBER . LPAREN params RPAREN

    LPAREN          shift and go to state 47


state 42

    (7) flow -> NUMBER CONNECT aggregation_functions .

    $end            reduce using rule 7 (flow -> NUMBER CONNECT aggregation_functions .)


state 43

    (8) aggregation_functions -> aggregation_function_call . CONNECT aggregation_functions
    (9) aggregation_functions -> aggregation_function_call .

    CONNECT         shift and go to state 48
    $end            reduce using rule 9 (aggregation_functions -> aggregation_function_call .)


state 44

    (28) params -> params COMMA expression .
    (15) expression -> expression . PLUS term
    (16) expression -> expression . MINUS term

    RPAREN          reduce using rule 28 (params -> params COMMA expression .)
    COMMA           reduce using rule 28 (params -> params COMMA expression .)
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15


state 45

    (6) flow_function_call -> VARIABLE LPAREN . params RPAREN
    (28) params -> . params COMMA expression
    (29) params -> . expression
    (12) expression -> . term
    (13) expression -> . string_def
    (15) expression -> . expression PLUS term
    (16) expression -> . expression MINUS term
    (17) term -> . exponent
    (18) term -> . term TIMES exponent
    (19) term -> . term DIV exponent
    (14) string_def -> . STRING
    (20) exponent -> . factor
    (21) exponent -> . factor EXP factor
    (22) factor -> . NUMBER
    (23) factor -> . VARIABLE
    (24) factor -> . LPAREN expression RPAREN
    (25) factor -> . function_call
    (26) function_call -> . VARIABLE LPAREN RPAREN
    (27) function_call -> . VARIABLE LPAREN params RPAREN

    STRING          shift and go to state 7
    NUMBER          shift and go to state 9
    VARIABLE        shift and go to state 20
    LPAREN          shift and go to state 10

    params                         shift and go to state 49
    expression                     shift and go to state 27
    term                           shift and go to state 4
    string_def                     shift and go to state 5
    exponent                       shift and go to state 6
    factor                         shift and go to state 8
    function_call                  shift and go to state 11

state 46

    (4) flow_functions -> flow_function_call CONNECT . flow_functions
    (4) flow_functions -> . flow_function_call CONNECT flow_functions
    (5) flow_functions -> . flow_function_call
    (6) flow_function_call -> . VARIABLE LPAREN params RPAREN

    VARIABLE        shift and go to state 38

    flow_function_call             shift and go to state 40
    flow_functions                 shift and go to state 50

state 47

    (10) aggregation_function_call -> NUMBER LPAREN . params RPAREN
    (28) params -> . params COMMA expression
    (29) params -> . expression
    (12) expression -> . term
    (13) expression -> . string_def
    (15) expression -> . expression PLUS term
    (16) expression -> . expression MINUS term
    (17) term -> . exponent
    (18) term -> . term TIMES exponent
    (19) term -> . term DIV exponent
    (14) string_def -> . STRING
    (20) exponent -> . factor
    (21) exponent -> . factor EXP factor
    (22) factor -> . NUMBER
    (23) factor -> . VARIABLE
    (24) factor -> . LPAREN expression RPAREN
    (25) factor -> . function_call
    (26) function_call -> . VARIABLE LPAREN RPAREN
    (27) function_call -> . VARIABLE LPAREN params RPAREN

    STRING          shift and go to state 7
    NUMBER          shift and go to state 9
    VARIABLE        shift and go to state 20
    LPAREN          shift and go to state 10

    params                         shift and go to state 51
    expression                     shift and go to state 27
    term                           shift and go to state 4
    string_def                     shift and go to state 5
    exponent                       shift and go to state 6
    factor                         shift and go to state 8
    function_call                  shift and go to state 11

state 48

    (8) aggregation_functions -> aggregation_function_call CONNECT . aggregation_functions
    (8) aggregation_functions -> . aggregation_function_call CONNECT aggregation_functions
    (9) aggregation_functions -> . aggregation_function_call
    (10) aggregation_function_call -> . NUMBER LPAREN params RPAREN

    NUMBER          shift and go to state 41

    aggregation_function_call      shift and go to state 43
    aggregation_functions          shift and go to state 52

state 49

    (6) flow_function_call -> VARIABLE LPAREN params . RPAREN
    (28) params -> params . COMMA expression

    RPAREN          shift and go to state 53
    COMMA           shift and go to state 37


state 50

    (4) flow_functions -> flow_function_call CONNECT flow_functions .

    $end            reduce using rule 4 (flow_functions -> flow_function_call CONNECT flow_functions .)


state 51

    (10) aggregation_function_call -> NUMBER LPAREN params . RPAREN
    (28) params -> params . COMMA expression

    RPAREN          shift and go to state 54
    COMMA           shift and go to state 37


state 52

    (8) aggregation_functions -> aggregation_function_call CONNECT aggregation_functions .

    $end            reduce using rule 8 (aggregation_functions -> aggregation_function_call CONNECT aggregation_functions .)


state 53

    (6) flow_function_call -> VARIABLE LPAREN params RPAREN .

    CONNECT         reduce using rule 6 (flow_function_call -> VARIABLE LPAREN params RPAREN .)
    $end            reduce using rule 6 (flow_function_call -> VARIABLE LPAREN params RPAREN .)


state 54

    (10) aggregation_function_call -> NUMBER LPAREN params RPAREN .

    CONNECT         reduce using rule 10 (aggregation_function_call -> NUMBER LPAREN params RPAREN .)
    $end            reduce using rule 10 (aggregation_function_call -> NUMBER LPAREN params RPAREN .)

